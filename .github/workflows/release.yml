name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: OpenCode Nexus v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## OpenCode Nexus v${{ steps.get_version.outputs.version }}

            ### Downloads
            - **Linux**: `opencode-nexus-linux-x64.AppImage`, `opencode-nexus-linux-x64.deb`
            - **macOS**: `opencode-nexus-macos-x64.dmg`, `opencode-nexus-macos-arm64.dmg`
            - **Windows**: `opencode-nexus-windows-x64.msi`, `opencode-nexus-windows-x64.exe`

            ### Installation
            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for installation instructions.

            ### Changelog
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

  build-linux:
    needs: create-release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            frontend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install frontend dependencies
        run: |
          cd frontend
          bun install

      - name: Build frontend
        run: |
          cd frontend
          bun run build

      - name: Build Tauri app
        run: |
          cd src-tauri
          cargo tauri build

      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/appimage/opencode-nexus_${{ needs.create-release.outputs.version }}_amd64.AppImage
          asset_name: opencode-nexus-linux-x64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Linux deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/deb/opencode-nexus_${{ needs.create-release.outputs.version }}_amd64.deb
          asset_name: opencode-nexus-linux-x64.deb
          asset_content_type: application/vnd.debian.binary-package

  build-macos:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            runner: macos-13
            arch: x64
          - target: aarch64-apple-darwin
            runner: macos-14
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-cargo-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            frontend/node_modules
          key: ${{ runner.os }}-${{ matrix.arch }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-bun-

      - name: Install frontend dependencies
        run: |
          cd frontend
          bun install

      - name: Build frontend
        run: |
          cd frontend
          bun run build

      - name: Build Tauri app
        run: |
          cd src-tauri
          cargo tauri build --target ${{ matrix.target }}

      - name: Upload macOS dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/${{ matrix.target }}/release/bundle/dmg/OpenCode Nexus_${{ needs.create-release.outputs.version }}_${{ matrix.target }}.dmg
          asset_name: opencode-nexus-macos-${{ matrix.arch }}.dmg
          asset_content_type: application/octet-stream

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            frontend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install frontend dependencies
        run: |
          cd frontend
          bun install

      - name: Build frontend
        run: |
          cd frontend
          bun run build

      - name: Build Tauri app
        run: |
          cd src-tauri
          cargo tauri build

      - name: Upload Windows MSI
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/msi/OpenCode Nexus_${{ needs.create-release.outputs.version }}_x64_en-US.msi
          asset_name: opencode-nexus-windows-x64.msi
          asset_content_type: application/x-msi

      - name: Upload Windows EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/opencode-nexus.exe
          asset_name: opencode-nexus-windows-x64.exe
          asset_content_type: application/x-msdownload
